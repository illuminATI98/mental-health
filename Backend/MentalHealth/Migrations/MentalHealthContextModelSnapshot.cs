// <auto-generated />
using System;
using MentalHealth;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MentalHealth.Migrations
{
    [DbContext(typeof(MentalHealthContext))]
    partial class MentalHealthContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MentalHealth.Models.Entities.MoodTracker", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<int>("Description")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MoodTracker");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            Description = 0
                        },
                        new
                        {
                            ID = 2L,
                            Description = 1
                        },
                        new
                        {
                            ID = 3L,
                            Description = 2
                        },
                        new
                        {
                            ID = 4L,
                            Description = 3
                        },
                        new
                        {
                            ID = 5L,
                            Description = 4
                        });
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.MoodTrackerUserJoin", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("MoodTrackerID")
                        .HasColumnType("bigint");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("MoodTrackerID");

                    b.ToTable("TrackerUserJoins");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.Tree", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Progress")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Trees");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.User", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Points")
                        .HasColumnType("int");

                    b.Property<long?>("TreeID")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserTaskID")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("TreeID");

                    b.HasIndex("UserTaskID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.UserTask", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.MoodTrackerUserJoin", b =>
                {
                    b.HasOne("MentalHealth.Models.Entities.MoodTracker", "MoodTracker")
                        .WithMany()
                        .HasForeignKey("MoodTrackerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MoodTracker");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.User", b =>
                {
                    b.HasOne("MentalHealth.Models.Entities.Tree", null)
                        .WithMany("Users")
                        .HasForeignKey("TreeID");

                    b.HasOne("MentalHealth.Models.Entities.UserTask", null)
                        .WithMany("Users")
                        .HasForeignKey("UserTaskID");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.Tree", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("MentalHealth.Models.Entities.UserTask", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
